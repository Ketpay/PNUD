# Generated by Django 4.1.1 on 2022-09-28 09:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ao_access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'ao_access',
                'verbose_name_plural': 'ao_access',
            },
        ),
        migrations.CreateModel(
            name='ao_need',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('zona', models.CharField(blank=True, max_length=255, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'ao_need',
                'verbose_name_plural': 'ao_need',
            },
        ),
        migrations.CreateModel(
            name='base_metas_estado_tendencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.CharField(blank=True, max_length=255, null=True)),
                ('submeta', models.CharField(blank=True, max_length=255, null=True)),
                ('capa_datos', models.CharField(blank=True, max_length=255, null=True)),
                ('codigo_idso', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'base_metas_estado_tendencia',
                'verbose_name_plural': 'base_metas_estado_tendencia',
            },
        ),
        migrations.CreateModel(
            name='base_puntos_referencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.CharField(blank=True, max_length=255, null=True)),
                ('submeta', models.CharField(blank=True, max_length=255, null=True)),
                ('descripccion_punto_referencia', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'base_puntos_referencia',
                'verbose_name_plural': 'base_puntos_referencia',
            },
        ),
        migrations.CreateModel(
            name='cw_chemical_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'cw_chemical_trend',
                'verbose_name_plural': 'cw_chemical_trend',
            },
        ),
        migrations.CreateModel(
            name='cw_nutrient_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'cw_nutrient_trend',
                'verbose_name_plural': 'cw_nutrient_trend',
            },
        ),
        migrations.CreateModel(
            name='cw_pathogen_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'cw_pathogen_trend',
                'verbose_name_plural': 'cw_pathogen_trend',
            },
        ),
        migrations.CreateModel(
            name='cw_trash_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'cw_trash_trend',
                'verbose_name_plural': 'cw_trash_trend',
            },
        ),
        migrations.CreateModel(
            name='eco_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'eco_status',
                'verbose_name_plural': 'eco_status',
            },
        ),
        migrations.CreateModel(
            name='eco_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('actividad_economica', models.CharField(blank=True, max_length=255, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'eco_trend',
                'verbose_name_plural': 'eco_trend',
            },
        ),
        migrations.CreateModel(
            name='fis_b_bmsy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('nombre_de_especies', models.CharField(blank=True, max_length=255, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'fis_b_bmsy',
                'verbose_name_plural': 'fis_b_bmsy',
            },
        ),
        migrations.CreateModel(
            name='fis_meancatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('tipo', models.CharField(blank=True, max_length=255, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'fis_meancatch',
                'verbose_name_plural': 'fis_meancatch',
            },
        ),
        migrations.CreateModel(
            name='hab_mangrove_extent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'hab_mangrove_extent',
                'verbose_name_plural': 'hab_mangrove_extent',
            },
        ),
        migrations.CreateModel(
            name='hab_mangrove_health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('balneario', models.CharField(blank=True, max_length=255, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'hab_mangrove_health',
                'verbose_name_plural': 'hab_mangrove_health',
            },
        ),
        migrations.CreateModel(
            name='hab_mangrove_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('balneario', models.CharField(blank=True, max_length=255, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'hab_mangrove_trend',
                'verbose_name_plural': 'hab_mangrove_trend',
            },
        ),
        migrations.CreateModel(
            name='hab_saltmarsh_extent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'hab_saltmarsh_extent',
                'verbose_name_plural': 'hab_saltmarsh_extent',
            },
        ),
        migrations.CreateModel(
            name='hab_saltmarsh_health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'hab_saltmarsh_health',
                'verbose_name_plural': 'hab_saltmarsh_health',
            },
        ),
        migrations.CreateModel(
            name='hab_saltmarsh_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'hab_saltmarsh_trend',
                'verbose_name_plural': 'hab_saltmarsh_trend',
            },
        ),
        migrations.CreateModel(
            name='le_sector_weight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('sector', models.CharField(blank=True, max_length=255, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'le_sector_weight',
                'verbose_name_plural': 'le_sector_weight',
            },
        ),
        migrations.CreateModel(
            name='liv_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'liv_status',
                'verbose_name_plural': 'liv_status',
            },
        ),
        migrations.CreateModel(
            name='liv_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'liv_trend',
                'verbose_name_plural': 'liv_trend',
            },
        ),
        migrations.CreateModel(
            name='spp_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'spp_status',
                'verbose_name_plural': 'spp_status',
            },
        ),
        migrations.CreateModel(
            name='spp_trend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('valor', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'spp_trend',
                'verbose_name_plural': 'spp_trend',
            },
        ),
        migrations.CreateModel(
            name='tr_sustainability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'tr_sustainability',
                'verbose_name_plural': 'tr_sustainability',
            },
        ),
        migrations.CreateModel(
            name='tr_visit_sq_pct_tourism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anio', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('balneario', models.CharField(blank=True, max_length=255, null=True)),
                ('puntaje', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'tr_visit_sq_pct_tourism',
                'verbose_name_plural': 'tr_visit_sq_pct_tourism',
            },
        ),
    ]
